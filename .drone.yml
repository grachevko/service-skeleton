services:
  database:
    image: mariadb
    environment:
      MYSQL_DATABASE: db
      MYSQL_ALLOW_EMPTY_PASSWORD: true

pipeline:
  build:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - docker build -t __IMAGE__:${DRONE_BUILD_NUMBER} .
      - while ! nc -z 127.0.0.1 3306; do sleep 1; done
      - >-
        (docker run --rm --network "container:$HOSTNAME"
        -e SYMFONY_ENV=test
        -e SYMFONY_DEBUG=0
        __IMAGE__:${DRONE_BUILD_NUMBER}); local result=$?;
      - >+
        if [ "$result" == 0 ]; then
          docker login -u"$HUB_LOGIN" -p"$HUB_PASSWORD" registry.gitlab.com
          docker push __IMAGE__:${DRONE_BUILD_NUMBER} > /dev/null
          docker rmi --force `docker images -q --filter "before=__IMAGE__:${DRONE_BUILD_NUMBER}" __IMAGE__` || true
        else
          docker rmi --force __IMAGE__:${DRONE_BUILD_NUMBER}
        fi
      - exit "$result"

  deploy:
    image: plugins/ssh
    host:
      - s2.automagistre.ru
      - s1.grachevko.ru
    user: premier
    port: 22
    script:
      - docker service update --image __IMAGE__:${DRONE_BUILD_NUMBER} astra50_app
      - docker rmi `docker images -q --filter "before=__IMAGE__:${DRONE_BUILD_NUMBER}" __IMAGE__` 2> /dev/null || true
    when:
      branch: master


  deploy:
    image: plugins/ssh
    host:
      - __SSH_HOST__
    user: __SSH_USER__
    port: 22
    script:
      - docker service update --image __IMAGE__:${DRONE_BUILD_NUMBER} __SERVICE__
      - docker rmi `docker images -q --filter "before=__IMAGE__:${DRONE_BUILD_NUMBER}" __IMAGE__` 2> /dev/null || true
    when:
      branch: master

  notify:
    image: plugins/slack
    channel: drone
    username: drone

# Values to replace: __IMAGE__ __SERVICE__ __SSH_HOST__ __SSH_USER__
# drone secret add --image plugins/ssh __REPO__ SSH_KEY @/home/root/.ssh/id_rsa
# drone secret add --image plugins/ssh __REPO__ SSH_KEY @/home/root/.ssh/id_rsa
# drone secret add --image plugins/slack __REPO__ SLACK_WEBHOOK __SLACK_URL
